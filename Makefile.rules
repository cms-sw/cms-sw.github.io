.PHONY: all pr-stats ib-files clean clean_up_old_files FORCE_TARGET
.DEFAULT_GOAL   := all
TIMESTAMP_FILE  := data/timestamps.txt
START_DATE      :=
ALL_RELVALS     := 
ALL_INPUTS      := 
ALL_UNITTESTS   := 
ALL_JOB_REPORTS := 
ALL_COMMANDS    := 

ifeq ($(strip $(FORCE_BUILD)),yes)
FORCE_BUILD:=FORCE_TARGET
else
ifeq ($(strip $(wildcard $(TIMESTAMP_FILE))),)
FORCE_BUILD:=FORCE_TARGET
endif
endif

define RunCommand
  @if [ -e $$< ] ;  then \
    [ -d $$(@D) ] || mkdir -p $$(@D) &&\
    echo $1 &&\
    ($1 > $$@) || rm -f $$@;\
  else \
    rm -f $$@ ;\
  fi
endef

#dir,arch,queue,date
define ProcessLogs
START_DATE := $(firstword $(sort $(START_DATE) $4))
ALL_RELVALS      += data/relvals/$2/$4/$3.json
ALL_INPUTS       += data/inputs/$2/$3/$4.csv
ALL_UNIT_TESTS   += data/unitTests/$2/$4/$3.json
ALL_JOB_REPORTS  += data/jobreports/$2/$3/$4.csv
ALL_COMMANDS     += data/commands/$2/$4/$3.json
data/relvals/$2/$4/$3.json: $1/pyRelValMatrixLogs/run/runall-report-step123-.log set_timestamps $(FORCE_BUILD)
	$(call RunCommand,./process-run123-logs $$<)
data/unitTests/$2/$4/$3.json: $1/unitTests-summary.log set_timestamps $(FORCE_BUILD)
	$(call RunCommand,./process-unitTestSummary-logs $$<)
data/commands/$2/$4/$3.json: $1/pyRelValMatrixLogs.zip set_timestamps $(FORCE_BUILD)
	$(call RunCommand,./process-step-commands $$< data/commands/objs)
data/jobreports/$2/$3/$4.csv: $1/pyRelValMatrixLogs.zip set_timestamps $(FORCE_BUILD)
	$(call RunCommand,./process-job-reports $$<)
data/inputs/$2/$3/$4.csv: $1/pyRelValMatrixLogs.zip set_timestamps $(FORCE_BUILD)
	$(call RunCommand,./log-input-files $$< | sort)
endef

-include Releases.mk
ALL_RULES  := $(ALL_RELVALS) $(ALL_INPUTS) $(ALL_UNIT_TESTS) $(ALL_JOB_REPORTS) $(ALL_COMMANDS)

FORCE_TARGET:
	@:
%/pyRelValMatrixLogs/run/runall-report-step123-.log:
	@:
%/unitTests-summary.log:
	@:
%/pyRelValMatrixLogs.zip:
	@:
data/cmsdist-config.json: FORCE_TARGET
	[ -d $(@D) ] || mkdir -p $(@D) &&\
	./process-cmsdist > $@
pr-stats:
	mkdir -p data/stats && ./process-pr-stats && cat data/stats/prs/*.csv | sort -u -r > data/stats/pr-stats.csv
ib-files: $(ALL_INPUTS)
	mkdir -p data/inputs && cat data/inputs/*/*/*.csv | sort -u -r > data/inputs/all-ibs.csv
clean:
	rm -rf data/relvals
	rm -rf data/unitTests
	rm -rf data/commands
	rm -rf data/jobreports
	rm -rf data/inputs
	rm -rf data/stats
clean_up_old_files: $(ALL_RULES)
	./cleanup-old-results -d "$(START_DATE)"
set_timestamps: FORCE_TARGET
	@touch -t 198001010101.00 $@
	@[ -e $(TIMESTAMP_FILE) ] || exit 0;\
	for file in $(ALL_RULES) ; do \
	  stamp="`grep \" $$file\$$\" $(TIMESTAMP_FILE)`" ;\
	  [ "X$$stamp" = "X" ] && continue ;\
	  [ -e $$file ] || continue;\
	  touch -t $$stamp ;\
	done
$(TIMESTAMP_FILE): $(ALL_RULES)
	@rm -f $@ && rm -f set_timestamps && touch $@ && \
	for file in $(ALL_RULES) ; do\
	  [ -e $$file ] || continue ;\
	  echo "`date -r $$file +%Y%m%d%H%M.%S` $$file" >> $@;\
	done
all: data/cmsdist-config.json ib-files clean_up_old_files pr-stats $(TIMESTAMP_FILE)
	@echo Done all
